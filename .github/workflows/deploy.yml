name: Deploy to Cloud Run

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Make secrets available to all steps
    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_REGION: ${{ secrets.GCP_REGION }}
      GCP_SERVICE: ${{ secrets.GCP_SERVICE }}
      # Optional runtime SA for the Cloud Run service (NOT the build SA)
      GCP_RUNTIME_SA: ${{ secrets.GCP_RUNTIME_SA }}

    steps:
      - uses: actions/checkout@v4

      - name: Google Auth (JSON key)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Validate inputs
        run: |
          set -euo pipefail
          test -n "${GCP_PROJECT_ID}" || (echo "Missing GCP_PROJECT_ID"; exit 1)
          test -n "${GCP_REGION}"     || (echo "Missing GCP_REGION"; exit 1)
          test -n "${GCP_SERVICE}"    || (echo "Missing GCP_SERVICE"; exit 1)
          gcloud --version

      - name: Enable required APIs (idempotent)
        run: |
          gcloud services enable \
            run.googleapis.com \
            cloudbuild.googleapis.com \
            artifactregistry.googleapis.com

      - name: Deploy to Cloud Run (build from source)
        run: |
          set -euo pipefail
          RUNTIME_FLAG=""
          if [[ -n "${GCP_RUNTIME_SA:-}" ]]; then
            RUNTIME_FLAG="--service-account=${GCP_RUNTIME_SA}"
          fi

          gcloud run deploy "${GCP_SERVICE}" \
            --project="${GCP_PROJECT_ID}" \
            --region="${GCP_REGION}" \
            --source="." \
            --allow-unauthenticated \
            ${RUNTIME_FLAG}

      - name: Smoke test
        run: |
          set -euo pipefail
          URL=$(gcloud run services describe "${GCP_SERVICE}" \
            --project="${GCP_PROJECT_ID}" --region="${GCP_REGION}" \
            --format='value(status.url)')
          echo "Service URL: $URL"
          curl -sSf "$URL/health" || (echo "Health check failed"; exit 1)
