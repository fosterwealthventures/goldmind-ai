# .github/workflows/deploy.yml
name: Deploy to Cloud Run

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  GCP_SERVICE: ${{ secrets.GCP_SERVICE }}
  CLOUD_RUN_DOMAIN: ${{ secrets.CLOUD_RUN_DOMAIN }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Authenticate using your JSON key secret
      - name: Google Auth (JSON key)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Install gcloud and set the project
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          install_components: "alpha,beta"

      - name: Verify auth & project
        run: |
          set -euo pipefail
          gcloud --version
          gcloud config set project "$GCP_PROJECT_ID"
          echo "Active account:"
          gcloud auth list --filter=status:ACTIVE --format="value(account)"

      # Compute the Cloud Build service account (resource name form)
      - name: Compute build service account
        id: buildsa
        run: |
          set -euo pipefail
          PRJNUM="$(gcloud projects describe "$GCP_PROJECT_ID" --format='value(projectNumber)')"
          echo "Project number: $PRJNUM"
          BUILD_SA="projects/${GCP_PROJECT_ID}/serviceAccounts/${PRJNUM}@cloudbuild.gserviceaccount.com"
          echo "BUILD_SA=${BUILD_SA}" >> "$GITHUB_OUTPUT"

      # Optional: enabling APIs here requires 'Service Usage Admin'; keep non-blocking
      - name: Enable required APIs (non-blocking)
        continue-on-error: true
        run: |
          gcloud services enable \
            run.googleapis.com \
            cloudbuild.googleapis.com \
            artifactregistry.googleapis.com

      # Deploy using Cloud Build SA
      - name: Deploy to Cloud Run
        run: |
          set -euo pipefail
          gcloud run deploy "$GCP_SERVICE" \
            --source . \
            --region "$GCP_REGION" \
            --project "$GCP_PROJECT_ID" \
            --allow-unauthenticated \
            --build-service-account "${{ steps.buildsa.outputs.BUILD_SA }}"

      # Simple smoke test: custom domain if provided; otherwise service URL
      - name: Smoke test
        run: |
          set -euo pipefail
          URL="${CLOUD_RUN_DOMAIN:-}"
          if [ -z "$URL" ]; then
            URL="$(gcloud run services describe "$GCP_SERVICE" --region "$GCP_REGION" --format='value(status.url)')"
          fi
          echo "Hitting $URL ..."
          (curl -fsS "$URL/health" || curl -fsS "$URL") >/dev/null
          echo "âœ… Smoke test passed for $URL"
