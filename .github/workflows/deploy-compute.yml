name: Deploy Compute to Cloud Run

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  SERVICE_NAME: goldmind-compute
  REPO_NAME: goldmind
  IMAGE: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/goldmind/compute:${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Who am I
        run: |
          gcloud config list
          gcloud auth list

      - name: Ensure Artifact Registry repo exists
        run: |
          gcloud artifacts repositories describe "$REPO_NAME" --location="$REGION" || \
          gcloud artifacts repositories create "$REPO_NAME" \
            --repository-format=docker --location="$REGION" -q

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${REGION}-docker.pkg.dev -q

      # IMPORTANT: Build context is compute/
      - name: Build image (compute/)
        run: docker build -f compute/Dockerfile -t "$IMAGE" compute

      - name: Push image
        run: docker push "$IMAGE"

      - name: Deploy to Cloud Run (Compute)
        run: |
          gcloud run deploy "$SERVICE_NAME" \
            --region "$REGION" \
            --platform managed \
            --image "$IMAGE" \
            --allow-unauthenticated \
            --quiet

      - name: Verify health (Compute)
        run: |
          set -e
          URL=$(gcloud run services describe "$SERVICE_NAME" --region "$REGION" --format='value(status.url)')
          echo "Service URL: $URL"
          for p in /health /v1/health; do
            echo "Probing $URL$p"
            if curl -fsS "$URL$p"; then exit 0; fi
          done
          echo "Health check failed"; curl -i "$URL/health" || true; curl -i "$URL/v1/health" || true; exit 1
