options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8
timeout: "1200s"

substitutions:
  _REGION: us-central1
  _SERVICE: goldmind-api
  _REPO: goldmind-api

steps:
  # (Optional) Ensure Docker is authenticated to Artifact Registry
  - id: 00-configure-docker
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        gcloud auth configure-docker ${_REGION}-docker.pkg.dev -q

  # Build (context = api/)
  - id: 01-build
    name: gcr.io/cloud-builders/docker
    env:
      - DOCKER_BUILDKIT=1
    args:
      - build
      - -f
      - api/Dockerfile
      - -t
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:$BUILD_ID
      - api

  # Push to Artifact Registry
  - id: 02-push
    name: gcr.io/cloud-builders/docker
    args:
      - push
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:$BUILD_ID

  # Deploy to Cloud Run
  - id: 03-deploy
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        gcloud run deploy "${_SERVICE}" \
          --image "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:$BUILD_ID" \
          --region "${_REGION}" \
          --platform managed \
          --allow-unauthenticated \
          --memory=1Gi \
          --cpu=1 \
          --concurrency=80 \
          --timeout=60

  # Smoke check (/health)
  - id: 04-smoke
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        URL=$(gcloud run services describe "${_SERVICE}" --region "${_REGION}" --format='value(status.url)')
        echo "Hitting $$URL/health ..."
        curl -fsS "$$URL/health" >/dev/null
        echo "Health check OK"

  # Summary
  - id: 05-summary
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        URL=$(gcloud run services describe "${_SERVICE}" --region "${_REGION}" --format='value(status.url)')
        printf "%s\n" \
          "================================================" \
          "Project:   $PROJECT_ID" \
          "Region:    ${_REGION}" \
          "Service:   ${_SERVICE}" \
          "Image:     ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:$BUILD_ID" \
          "Cloud Run: $$URL" \
          "================================================"

images:
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:$BUILD_ID
