# cloudbuild.yaml â€” GoldMIND API + Compute with FULL endpoint smoke tests (escaped bash locals)

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8
timeout: "1200s"

substitutions:
  _API_DOMAIN: ${_API_DOMAIN}
  _ENV: ${_ENV}
  _REGION: ${_REGION}
  _SERVICE_API: ${_SERVICE_API}
  _SERVICE_COMPUTE: ${_SERVICE_COMPUTE}
  _USE_YFINANCE: ${_USE_YFINANCE}
  _ARTIFACT_REPO: ${_ARTIFACT_REPO}
  _REPO: ${_REPO}
  _STRICT_SMOKE: ${_STRICT_SMOKE}

steps:
  - id: 01-auth-ar
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args: ["-c", "set -e; gcloud auth configure-docker ${_REGION}-docker.pkg.dev -q"]

  - id: 02-build-api
    name: gcr.io/cloud-builders/docker
    args:
      ["build","-f","api/Dockerfile","-t","${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_API}:$SHORT_SHA","."]

  - id: 03-build-compute
    name: gcr.io/cloud-builders/docker
    args:
      ["build","-f","compute/Dockerfile","-t","${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_COMPUTE}:$SHORT_SHA","."]

  - id: 04-push-api
    name: gcr.io/cloud-builders/docker
    args: ["push","${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_API}:$SHORT_SHA"]

  - id: 05-push-compute
    name: gcr.io/cloud-builders/docker
    args: ["push","${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_COMPUTE}:$SHORT_SHA"]

  - id: 06-deploy-api
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - >
        set -e;
        gcloud run deploy ${_SERVICE_API}
        --image ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_API}:$SHORT_SHA
        --region ${_REGION}
        --allow-unauthenticated
        --update-env-vars ENV=${_ENV},API_DOMAIN=${_API_DOMAIN},USE_YFINANCE=${_USE_YFINANCE}
        --timeout=300 --concurrency=80 --min-instances=0 --max-instances=4

  - id: 07-deploy-compute
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - >
        set -e;
        gcloud run deploy ${_SERVICE_COMPUTE}
        --image ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_COMPUTE}:$SHORT_SHA
        --region ${_REGION}
        --update-env-vars ENV=${_ENV}
        --timeout=300 --concurrency=20 --min-instances=0 --max-instances=2

  - id: 08-smoke-api
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        API="${_API_DOMAIN}"
        STRICT="${_STRICT_SMOKE:-true}"
        echo "API: $$API  |  STRICT_SMOKE=$$STRICT"

        for i in $(seq 1 24); do
          if curl -fsS "$$API/health" >/dev/null; then
            echo "OK: /health"
            break
          fi
          echo "Waiting for API /health (attempt $$i)..."
          sleep 5
        done
        curl -fsS "$$API/health" >/dev/null || { echo "FAIL: /health never became ready"; exit 1; }

        pass_get () {
          url="$$1"
          code=$(curl -sS -m 25 -o /dev/null -w "%{http_code}" "$$url" || echo "000")
          echo "GET $$url  -> $$code"
          if [[ "$$code" =~ ^20[0-9]$ ]]; then return 0; fi
          if [ "$$code" = "404" ] && [ "$$STRICT" != "true" ]; then echo "WARN 404 (non-strict)"; return 0; fi
          echo "FAIL $$url ($$code)"; return 1
        }

        pass_post () {
          url="$$1"; body="$$2"; hdrs="$$3"
          if [ -n "$$hdrs" ]; then HFLAG=(-H "$$hdrs"); else HFLAG=(); fi
          code=$(curl -sS -m 25 -o /dev/null -w "%{http_code}" -X POST "${HFLAG[@]}" -H "Content-Type: application/json" -d "$$body" "$$url" || echo "000")
          echo "POST $$url  -> $$code"
          if [[ "$$code" =~ ^20[0-9]$ ]]; then return 0; fi
          if [ "$$code" = "404" ] && [ "$$STRICT" != "true" ]; then echo "WARN 404 (non-strict)"; return 0; fi
          echo "FAIL $$url ($$code)"; return 1
        }

        GETS=(
          "/"
          "/health"
          "/api/health"
          "/docs"
          "/openapi.json"
          "/market/gold/series"
          "/market/gold/spot"
          "/market/gold/futures"
          "/market/gold/etf"
          "/market/gold/options"
          "/api/summary"
          "/v1/predict?symbol=XAUUSD"
          "/v1/bias?symbol=XAUUSD"
          "/v1/feature-importance"
          "/v1/bias/influence"
          "/v1/alerts"
          "/v1/trace?id=demo"
          "/v1/indicators"
          "/v1/decision"
        )

        for ep in "${GETS[@]}"; do
          pass_get "$$API$$ep"
        done

        BODY_PRED='{"symbol":"XAUUSD","horizon":"1d","amount":1.0,"indicators":["sma","ema","rsi"]}'
        pass_post "$$API/predict" "$$BODY_PRED" ""
        pass_post "$$API/api/predict" "$$BODY_PRED" ""

        pass_post "$$API/compute/predict"   '{"symbol":"XAUUSD","horizon":"1d","amount":1.0}' ""
        pass_post "$$API/compute/summary"   '{}' ""
        pass_post "$$API/compute/structural" '{}' ""
        pass_post "$$API/compute/midlayer"   '{}' ""
        pass_post "$$API/compute/series"     '{}' ""
        pass_post "$$API/compute/blended"    '{}' ""
        pass_post "$$API/api/compute/predict"   '{"symbol":"XAUUSD","horizon":"1d","amount":1.0}' ""
        pass_post "$$API/api/compute/summary"   '{}' ""
        pass_post "$$API/api/compute/structural" '{}' ""
        pass_post "$$API/api/compute/midlayer"   '{}' ""
        pass_post "$$API/api/compute/series"     '{}' ""
        pass_post "$$API/api/compute/blended"    '{}' ""

        echo "All API endpoint checks passed."

  - id: 09-smoke-compute
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        URL=$(gcloud run services describe "${_SERVICE_COMPUTE}" --region "${_REGION}" --format="value(status.url)")
        echo "Compute URL: $$URL"
        if [ -z "$$URL" ]; then echo "WARN: No compute URL; skipping."; exit 0; fi
        code=$(curl -sS -m 20 -o /dev/null -w "%{http_code}" "$$URL/health" || echo "000")
        echo "GET $$URL/health -> $$code"
        case "$$code" in
          200|204) echo "Compute health OK"; exit 0 ;;
          401|403) echo "NOTE: Compute private; auth required. Skipping."; exit 0 ;;
          *) echo "FAIL: Compute /health returned $$code"; exit 1 ;;
        esac

  - id: 10-summary
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        set -e
        API="${_API_DOMAIN}"
        C=$(gcloud run services describe "${_SERVICE_COMPUTE}" --region "${_REGION}" --format="value(status.url)")
        echo "----- Deployment Summary -----"
        echo "API:           ${_SERVICE_API}"
        echo "API URL:       $$API"
        echo "Compute:       ${_SERVICE_COMPUTE}"
        echo "Compute URL:   $$C"
        echo "Image (API):     ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_API}:$SHORT_SHA"
        echo "Image (Compute): ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_COMPUTE}:$SHORT_SHA"
        echo "------------------------------"

images:
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_API}:$SHORT_SHA
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_COMPUTE}:$SHORT_SHA
