# cloudbuild.yaml â€” minimal & safe
# Build api/Dockerfile from repo root, push to Artifact Registry, deploy to Cloud Run.

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8

timeout: "1200s"

steps:
  # 1) Auth Docker to Artifact Registry
  - id: auth-ar
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        set -e
        gcloud auth configure-docker us-central1-docker.pkg.dev -q

  # 2) Build image (context ".", Dockerfile at api/Dockerfile)
  - id: build
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - -f
      - api/Dockerfile
      - -t
      - us-central1-docker.pkg.dev/$PROJECT_ID/goldmind/api:$SHORT_SHA
      - .

  # 3) Push image
  - id: push
    name: gcr.io/cloud-builders/docker
    args:
      - push
      - us-central1-docker.pkg.dev/$PROJECT_ID/goldmind/api:$SHORT_SHA

  # 4) Deploy to Cloud Run (service: goldmind-api, region: us-central1)
  - id: deploy
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        IMAGE="us-central1-docker.pkg.dev/$PROJECT_ID/goldmind/api:$SHORT_SHA"
        gcloud run deploy goldmind-api \
          --region us-central1 \
          --platform managed \
          --image "$${IMAGE}" \
          --allow-unauthenticated \
          --quiet
        SVC_URL="$(gcloud run services describe goldmind-api --region us-central1 --format='value(status.url)')"
        echo "SERVICE_URL=$${SVC_URL}"  >  /workspace/deploy.env
        echo "SERVICE_IMAGE=$${IMAGE}" >> /workspace/deploy.env

  # 5) Wait for /health
  - id: wait-health
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        source /workspace/deploy.env
        echo "Waiting for $${SERVICE_URL}/health ..."
        for i in {1..30}; do
          if curl -fsS "$${SERVICE_URL}/health" >/dev/null 2>&1; then
            echo "Health OK"
            exit 0
          fi
          sleep 5
        done
        echo "Health check FAILED:"
        curl -i "$${SERVICE_URL}/health" || true
        exit 1

  # 6) Summary
  - id: summary
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        source /workspace/deploy.env
        echo "--------------------------------------------------"
        echo " GoldMIND API - Deploy Summary"
        echo " Project:     $PROJECT_ID"
        echo " Region:      us-central1"
        echo " Service:     goldmind-api"
        echo " Service URL: $${SERVICE_URL}"
        echo " Image:       $${SERVICE_IMAGE}"
        echo "--------------------------------------------------"

images:
  - us-central1-docker.pkg.dev/$PROJECT_ID/goldmind/api:$SHORT_SHA
